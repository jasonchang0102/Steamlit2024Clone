import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Corrected games played buckets based on the new ranges provided
def assign_correct_bucket(games_played):
    if games_played >= 1 and games_played <= 3:
        return 'Very Low'
    elif games_played >= 4 and games_played <= 5:
        return 'Low'
    elif games_played >= 6 and games_played <= 9:
        return 'Medium'
    elif games_played >= 10 and games_played <= 68:
        return 'High'
    else:
        return 'Unknown'

# Load the dataset
data = pd.read_csv('https://github.com/jasonchang0102/Streamlit0102/blob/main/RAWBliz.csv')

# Apply the function to create a new column for the games played bucket
data['games_played_bucket'] = data['games_played'].apply(assign_correct_bucket)

# Assuming Event based on the day of the month
data['Date'] = pd.to_datetime(data['Date'])
data['Event'] = data['Date'].dt.day.apply(lambda x: 'Event 1' if x <= 15 else 'Event 2')

# Group by region, platform, games played bucket, and event to calculate average dollars spent
grouped_data = data.groupby(['region', 'platform', 'games_played_bucket', 'Event'])['dollars_spent'].mean().reset_index()

# Pivot the data to create a matrix form suitable for a heatmap
grouped_data['Region_x_Platform'] = grouped_data.apply(lambda row: f"Region {row['region']} x Platform {row['platform']}", axis=1)
grouped_data['Games_Played_x_Event'] = grouped_data.apply(lambda row: f"{row['games_played_bucket']} x {row['Event']}", axis=1)
heatmap_data = grouped_data.pivot('Region_x_Platform', 'Games_Played_x_Event', 'dollars_spent')

# Order columns correctly according to games played bucket from left to right
ordered_columns = [col for col in heatmap_data.columns if 'Very Low' in col]
ordered_columns += [col for col in heatmap_data.columns if 'Low' in col]
ordered_columns += [col for col in heatmap_data.columns if 'Medium' in col]
ordered_columns += [col for col in heatmap_data.columns if 'High' in col]
heatmap_data = heatmap_data[ordered_columns]

# Create the heatmap with the corrected axes and color scheme
plt.figure(figsize=(14, 10))
cmap_choice = sns.diverging_palette(240, 10, n=9, as_cmap=True)  # Blue to red color palette
sns.heatmap(heatmap_data, annot=True, fmt=".2f", cmap=cmap_choice, cbar_kws={'label': 'Average Dollars Spent'})
plt.title('Average Player Spending per Player by Region x Platform and Games Played Bucket x Event')
plt.xlabel('Games Played Bucket x Event')
plt.ylabel('Region x Platform')

# Save the heatmap to a file with the corrected bucket labels and color scheme
heatmap_file_path = 'heatmap_spending.png'
plt.savefig(heatmap_file_path)

# Display the heatmap
plt.show()
